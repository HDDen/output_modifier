name: Large testsuite (run manually before releases)

on: workflow_dispatch

jobs:
  php81:
    runs-on: ${{ matrix.os }}
    env:
      WEBPCONVERT_EWWW_API_KEY: ${{ secrets.WEBPCONVERT_EWWW_API_KEY }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, windows-2022, windows-2019, windows-2016, macos-11, macos-10.15]
        php: [8.1]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup ffmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: exif, mbstring, fileinfo, gd, vips, imagick, gmagick

    - name: Setup problem matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php81-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php81-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script test

  php80:
    runs-on: ${{ matrix.os }}
    env:
      WEBPCONVERT_EWWW_API_KEY: ${{ secrets.WEBPCONVERT_EWWW_API_KEY }}
    strategy:
      fail-fast: true
      matrix:
        os: [windows-2022, macos-11]
        php: [8.0]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup ffmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: exif, mbstring, fileinfo, gd, vips, imagick, gmagick

    - name: Setup problem matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php80-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php80-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script test

  php74:
    runs-on: ${{ matrix.os }}
    env:
      WEBPCONVERT_EWWW_API_KEY: ${{ secrets.WEBPCONVERT_EWWW_API_KEY }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-18.04, windows-2022, windows-2019, windows-2016, macos-11, macos-10.15]
        php: [7.4]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup ffmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: exif, mbstring, fileinfo, gd, vips, imagick, gmagick

    - name: Setup problem matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php74-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php74-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script test

  php73:
    runs-on: ${{ matrix.os }}
    env:
      WEBPCONVERT_EWWW_API_KEY: ${{ secrets.WEBPCONVERT_EWWW_API_KEY }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-18.04, windows-2022, windows-2019, windows-2016, macos-11, macos-10.15]
        php: [7.3]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup ffmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: exif, mbstring, fileinfo, gd, vips, imagick, gmagick

    - name: Setup problem matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php73-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php73-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script test


  php71:
    runs-on: ${{ matrix.os }}
    env:
      WEBPCONVERT_EWWW_API_KEY: ${{ secrets.WEBPCONVERT_EWWW_API_KEY }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-18.04, windows-2022, windows-2019, windows-2016, macos-11, macos-10.15]
        php: [7.1]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup ffmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: exif, mbstring, fileinfo, gd, vips, imagick, gmagick

    - name: Setup problem matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php71-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php71-

    - name: Downgrade PHP unit to a version that supports PHP 7.1
      run: composer require "phpunit/phpunit:^7.0" --dev

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script test


  with_disabled_functions:
    runs-on: ${{ matrix.os }}
    env:
      WEBPCONVERT_EWWW_API_KEY: ${{ secrets.WEBPCONVERT_EWWW_API_KEY }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-18.04]
        php: [7.1]
        # unfortunately, proc_open is needed by phpunit, so we cannot disable proc_open
        disabled_functions: ["exec", "exec,passthru,shell_exec,popen"]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup ffmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: exif, mbstring, fileinfo, gd, vips, imagick, gmagick
        ini-values: disable_functions="${{ matrix.disabled_functions }}"

    - name: Setup problem matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-disabledfunctions-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-disabledfunctions-

    - name: Downgrade PHP unit to a version that supports PHP 7.1
      run: composer require "phpunit/phpunit:^7.0" --dev

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script test



  codecov:
    runs-on: ubuntu-20.04
    env:
      WEBPCONVERT_EWWW_API_KEY: ${{ secrets.WEBPCONVERT_EWWW_API_KEY }}
      WEBPCONVERT_WPC_API_URL: ${{ secrets.WEBPCONVERT_WPC_API_URL }}
      WEBPCONVERT_WPC_API_KEY: ${{ secrets.WEBPCONVERT_WPC_API_KEY }}
      WEBPCONVERT_WPC_API_URL_API0: ${{ secrets.WEBPCONVERT_WPC_API_URL_API0 }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup ffmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: exif, mbstring, fileinfo, gd, vips, imagick, gmagick

    - name: Setup problem matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Downgrade PHP unit to a version that supports PHP 7.4
      run: composer require "phpunit/phpunit:^8.0" --dev

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-codecov-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-codecov-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script test-with-coverage

    - name: Upload Scrutinizer coverage
      uses: sudo-bot/action-scrutinizer@latest
      with:
        cli-args: "--format=php-clover build/logs/coverage.clover"
